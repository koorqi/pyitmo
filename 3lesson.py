# Операторы
# Арифметические: + - * / % // **
# Сравнения: == равно, !=, <>, <,>, >=,<=
#Операторы присваивания: =,
# a =3, a+=2, a = 5, -=, *=, %=. //=, **=
# логические: and or not
# Принадлежности: in, not in

# Операторы тождественности: is, not is используется при проверке на None
# Побитовые: & | - или ^ - побитовый xor, << >> - сдвиги влево, вправо, ~

# Ветвление Условные конструкции

a=1
b=2
if a>b:
    print ('a>b')
elif a==b:
    print('a=b')
else:
    print('a'<'b')
    
    

#pass #инструкция котороя ничего не делает

#Тернарные операторы
flag=True
if flag:
    v=5
else:
    v='hello'

v=5 if flag else 'hello' # истина если флаг иначе хелло
print (v)


#циклы while выполняется многократно пока условие истинно
i=1
summa=0
while i<10:
    summa +=i
    i +=1

    print(summa)


i=1
while i:
    if i==10:
        break   #досрочный выход из цикла
    #elif i ==8:
        continue
    i +=1

#continue - пропустить итерацию
#range - от нуля до девяти
for i in range (10, 20, 2):
    print (i, end =', ')                 # увидим через запятую
    
print ('\n\n')

d = {
    'id':1,
    'name':'linus'
    }

for key, value in d.items():
    print(key,value)

# срезы

#result=''
#for i in range(10):
 #   result += str(i) так типа нельзя
 

result = []

for i in range(10):
result.append(str(i)) # добавить в список
#append добавляет в конец списка, метод вызывается через точку

result=''.join(result)# позволяет список превратить в строчку
print(result)




# Операторы
# Арифметические: + - * / % // **
# Сравнения: == равно, !=, <>, <,>, >=,<=
#Операторы присваивания: =,
# a =3, a+=2, a = 5, -=, *=, %=. //=, **=
# логические: and or not
# Принадлежности: in, not in

# Операторы тождественности: is, not is используется при проверке на None
# Побитовые: & | - или ^ - побитовый xor, << >> - сдвиги влево, вправо, ~

# Ветвление Условные конструкции

a=1
b=2
if a>b:
    print ('a>b')
elif a==b:
    print('a=b')
else:
    print('a'<'b')
    
    

#pass #инструкция котороя ничего не делает

#Тернарные операторы
flag=True
if flag:
    v=5
else:
    v='hello'

v=5 if flag else 'hello' # истина если флаг иначе хелло
print (v)


#циклы




















































